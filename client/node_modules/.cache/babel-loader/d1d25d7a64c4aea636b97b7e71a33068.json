{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.unstable_createStyleFunctionSx = unstable_createStyleFunctionSx;\nvar _merge = _interopRequireDefault(require(\"../merge\"));\nvar _getThemeValue = require(\"../getThemeValue\");\nvar _breakpoints = require(\"../breakpoints\");\nfunction objectsHaveSameKeys() {\n  for (var _len = arguments.length, objects = new Array(_len), _key = 0; _key < _len; _key++) {\n    objects[_key] = arguments[_key];\n  }\n  const allKeys = objects.reduce((keys, object) => keys.concat(Object.keys(object)), []);\n  const union = new Set(allKeys);\n  return objects.every(object => union.size === Object.keys(object).length);\n}\nfunction callIfFn(maybeFn, arg) {\n  return typeof maybeFn === 'function' ? maybeFn(arg) : maybeFn;\n} // eslint-disable-next-line @typescript-eslint/naming-convention\n\nfunction unstable_createStyleFunctionSx() {\n  let styleFunctionMapping = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _getThemeValue.styleFunctionMapping;\n  const propToStyleFunction = Object.keys(styleFunctionMapping).reduce((acc, styleFnName) => {\n    styleFunctionMapping[styleFnName].filterProps.forEach(propName => {\n      acc[propName] = styleFunctionMapping[styleFnName];\n    });\n    return acc;\n  }, {});\n  function getThemeValue(prop, value, theme) {\n    const inputProps = {\n      [prop]: value,\n      theme\n    };\n    const styleFunction = propToStyleFunction[prop];\n    return styleFunction ? styleFunction(inputProps) : {\n      [prop]: value\n    };\n  }\n  function styleFunctionSx(props) {\n    const {\n      sx,\n      theme = {}\n    } = props || {};\n    if (!sx) {\n      return null; // Emotion & styled-components will neglect null\n    }\n    /*\n     * Receive `sxInput` as object or callback\n     * and then recursively check keys & values to create media query object styles.\n     * (the result will be used in `styled`)\n     */\n\n    function traverse(sxInput) {\n      let sxObject = sxInput;\n      if (typeof sxInput === 'function') {\n        sxObject = sxInput(theme);\n      } else if (typeof sxInput !== 'object') {\n        // value\n        return sxInput;\n      }\n      if (!sxObject) {\n        return null;\n      }\n      const emptyBreakpoints = (0, _breakpoints.createEmptyBreakpointObject)(theme.breakpoints);\n      const breakpointsKeys = Object.keys(emptyBreakpoints);\n      let css = emptyBreakpoints;\n      Object.keys(sxObject).forEach(styleKey => {\n        const value = callIfFn(sxObject[styleKey], theme);\n        if (value !== null && value !== undefined) {\n          if (typeof value === 'object') {\n            if (propToStyleFunction[styleKey]) {\n              css = (0, _merge.default)(css, getThemeValue(styleKey, value, theme));\n            } else {\n              const breakpointsValues = (0, _breakpoints.handleBreakpoints)({\n                theme\n              }, value, x => ({\n                [styleKey]: x\n              }));\n              if (objectsHaveSameKeys(breakpointsValues, value)) {\n                css[styleKey] = styleFunctionSx({\n                  sx: value,\n                  theme\n                });\n              } else {\n                css = (0, _merge.default)(css, breakpointsValues);\n              }\n            }\n          } else {\n            css = (0, _merge.default)(css, getThemeValue(styleKey, value, theme));\n          }\n        }\n      });\n      return (0, _breakpoints.removeUnusedBreakpoints)(breakpointsKeys, css);\n    }\n    return Array.isArray(sx) ? sx.map(traverse) : traverse(sx);\n  }\n  return styleFunctionSx;\n}\nconst styleFunctionSx = unstable_createStyleFunctionSx();\nstyleFunctionSx.filterProps = ['sx'];\nvar _default = styleFunctionSx;\nexports.default = _default;","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","unstable_createStyleFunctionSx","_merge","_getThemeValue","_breakpoints","objectsHaveSameKeys","objects","allKeys","reduce","keys","object","concat","union","Set","every","size","length","callIfFn","maybeFn","arg","styleFunctionMapping","propToStyleFunction","acc","styleFnName","filterProps","forEach","propName","getThemeValue","prop","theme","inputProps","styleFunction","styleFunctionSx","props","sx","traverse","sxInput","sxObject","emptyBreakpoints","createEmptyBreakpointObject","breakpoints","breakpointsKeys","css","styleKey","undefined","breakpointsValues","handleBreakpoints","x","removeUnusedBreakpoints","Array","isArray","map","_default"],"sources":["C:/Users/Dell 9010/Desktop/DB and SDA project/project/node_modules/@mui/system/styleFunctionSx/styleFunctionSx.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.unstable_createStyleFunctionSx = unstable_createStyleFunctionSx;\n\nvar _merge = _interopRequireDefault(require(\"../merge\"));\n\nvar _getThemeValue = require(\"../getThemeValue\");\n\nvar _breakpoints = require(\"../breakpoints\");\n\nfunction objectsHaveSameKeys(...objects) {\n  const allKeys = objects.reduce((keys, object) => keys.concat(Object.keys(object)), []);\n  const union = new Set(allKeys);\n  return objects.every(object => union.size === Object.keys(object).length);\n}\n\nfunction callIfFn(maybeFn, arg) {\n  return typeof maybeFn === 'function' ? maybeFn(arg) : maybeFn;\n} // eslint-disable-next-line @typescript-eslint/naming-convention\n\n\nfunction unstable_createStyleFunctionSx(styleFunctionMapping = _getThemeValue.styleFunctionMapping) {\n  const propToStyleFunction = Object.keys(styleFunctionMapping).reduce((acc, styleFnName) => {\n    styleFunctionMapping[styleFnName].filterProps.forEach(propName => {\n      acc[propName] = styleFunctionMapping[styleFnName];\n    });\n    return acc;\n  }, {});\n\n  function getThemeValue(prop, value, theme) {\n    const inputProps = {\n      [prop]: value,\n      theme\n    };\n    const styleFunction = propToStyleFunction[prop];\n    return styleFunction ? styleFunction(inputProps) : {\n      [prop]: value\n    };\n  }\n\n  function styleFunctionSx(props) {\n    const {\n      sx,\n      theme = {}\n    } = props || {};\n\n    if (!sx) {\n      return null; // Emotion & styled-components will neglect null\n    }\n    /*\n     * Receive `sxInput` as object or callback\n     * and then recursively check keys & values to create media query object styles.\n     * (the result will be used in `styled`)\n     */\n\n\n    function traverse(sxInput) {\n      let sxObject = sxInput;\n\n      if (typeof sxInput === 'function') {\n        sxObject = sxInput(theme);\n      } else if (typeof sxInput !== 'object') {\n        // value\n        return sxInput;\n      }\n\n      if (!sxObject) {\n        return null;\n      }\n\n      const emptyBreakpoints = (0, _breakpoints.createEmptyBreakpointObject)(theme.breakpoints);\n      const breakpointsKeys = Object.keys(emptyBreakpoints);\n      let css = emptyBreakpoints;\n      Object.keys(sxObject).forEach(styleKey => {\n        const value = callIfFn(sxObject[styleKey], theme);\n\n        if (value !== null && value !== undefined) {\n          if (typeof value === 'object') {\n            if (propToStyleFunction[styleKey]) {\n              css = (0, _merge.default)(css, getThemeValue(styleKey, value, theme));\n            } else {\n              const breakpointsValues = (0, _breakpoints.handleBreakpoints)({\n                theme\n              }, value, x => ({\n                [styleKey]: x\n              }));\n\n              if (objectsHaveSameKeys(breakpointsValues, value)) {\n                css[styleKey] = styleFunctionSx({\n                  sx: value,\n                  theme\n                });\n              } else {\n                css = (0, _merge.default)(css, breakpointsValues);\n              }\n            }\n          } else {\n            css = (0, _merge.default)(css, getThemeValue(styleKey, value, theme));\n          }\n        }\n      });\n      return (0, _breakpoints.removeUnusedBreakpoints)(breakpointsKeys, css);\n    }\n\n    return Array.isArray(sx) ? sx.map(traverse) : traverse(sx);\n  }\n\n  return styleFunctionSx;\n}\n\nconst styleFunctionSx = unstable_createStyleFunctionSx();\nstyleFunctionSx.filterProps = ['sx'];\nvar _default = styleFunctionSx;\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script"}